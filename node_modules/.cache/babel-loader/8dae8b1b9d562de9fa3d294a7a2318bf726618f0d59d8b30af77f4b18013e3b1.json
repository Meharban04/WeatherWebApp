{"ast":null,"code":"import{useState}from\"react\";import{AsyncPaginate}from\"react-select-async-paginate\";import{GEO_API_URL,geoApiOptions}from'../../api';import{jsx as _jsx}from\"react/jsx-runtime\";const Search=_ref=>{let{onSearchChange}=_ref;const[search,setSearch]=useState(null);const loadOptions=inputValue=>{return fetch(\"\".concat(GEO_API_URL,\"/cities?minPopulation=1000000&namePrefix=\").concat(inputValue),geoApiOptions).then(response=>response.json()).then(response=>{return{options:response.data.map(city=>{return{value:\"\".concat(city.latitude,\" \").concat(city.longitude),label:\"\".concat(city.name,\", \").concat(city.countryCode)};})};}).catch(err=>console.error(err));};const handleOnChange=searchData=>{setSearch(searchData);onSearchChange(searchData);};return/*#__PURE__*/_jsx(AsyncPaginate,{placeholder:\"Search for city\",debounceTimeout:600//To not make a request everytime a button is clicked\n,value:search,onChange:handleOnChange,loadOptions:loadOptions});};export default Search;","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsx","_jsx","Search","_ref","onSearchChange","search","setSearch","loadOptions","inputValue","fetch","concat","then","response","json","options","data","map","city","value","latitude","longitude","label","name","countryCode","catch","err","console","error","handleOnChange","searchData","placeholder","debounceTimeout","onChange"],"sources":["/Users/meharbanmultani/react-weather-app/src/components/search/search.js"],"sourcesContent":["import { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_URL, geoApiOptions } from '../../api';\n\nconst Search = ({ onSearchChange }) => {\n\n    const [search, setSearch] = useState(null);\n\n\n    const loadOptions = (inputValue) => {\n        return fetch(`${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`, \n            geoApiOptions\n        )\n            .then((response) => response.json())\n            .then((response) => {\n                return {\n                    options: response.data.map((city) => {\n                        return {\n                            value: `${city.latitude} ${city.longitude}`,\n                            label: `${city.name}, ${city.countryCode}`,\n                        };\n                    }),\n                };\n            })\n            .catch((err) => console.error(err));\n    };\n\n    const handleOnChange = (searchData) => {\n        setSearch(searchData);\n        onSearchChange(searchData);\n    };\n\n    return (\n        <AsyncPaginate\n            placeholder=\"Search for city\"\n            debounceTimeout={600}//To not make a request everytime a button is clicked\n            value={search}\n            onChange={handleOnChange}\n            loadOptions={loadOptions}\n        />\n    )\n};\n\nexport default Search"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,aAAa,KAAQ,6BAA6B,CAC3D,OAASC,WAAW,CAAEC,aAAa,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CAE9B,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAG1C,KAAM,CAAAW,WAAW,CAAIC,UAAU,EAAK,CAChC,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIZ,WAAW,8CAAAY,MAAA,CAA4CF,UAAU,EAC7ET,aACJ,CAAC,CACIY,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEC,QAAQ,EAAK,CAChB,MAAO,CACHE,OAAO,CAAEF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAEC,IAAI,EAAK,CACjC,MAAO,CACHC,KAAK,IAAAR,MAAA,CAAKO,IAAI,CAACE,QAAQ,MAAAT,MAAA,CAAIO,IAAI,CAACG,SAAS,CAAE,CAC3CC,KAAK,IAAAX,MAAA,CAAKO,IAAI,CAACK,IAAI,OAAAZ,MAAA,CAAKO,IAAI,CAACM,WAAW,CAC5C,CAAC,CACL,CAAC,CACL,CAAC,CACL,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,EAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAG,cAAc,CAAIC,UAAU,EAAK,CACnCvB,SAAS,CAACuB,UAAU,CAAC,CACrBzB,cAAc,CAACyB,UAAU,CAAC,CAC9B,CAAC,CAED,mBACI5B,IAAA,CAACJ,aAAa,EACViC,WAAW,CAAC,iBAAiB,CAC7BC,eAAe,CAAE,GAAI;AAAA,CACrBb,KAAK,CAAEb,MAAO,CACd2B,QAAQ,CAAEJ,cAAe,CACzBrB,WAAW,CAAEA,WAAY,CAC5B,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}