{"ast":null,"code":"var _jsxFileName = \"/Users/meharbanmultani/react-weather-app/src/components/search/search.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_URL, geoApiOptions } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  onSearchChange\n}) => {\n  _s();\n  const [search, setSearch] = useState(null);\n  const loadOptions = inputValue => {\n    return fetch(`${GEO_API_URL}/cities?minpopulation=1000000&namePrefix=${inpiu}`, options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n  };\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for city\",\n    debounceTimeout: 600 //To not make a request everytime a button is clicked\n    ,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsxDEV","_jsxDEV","Search","onSearchChange","_s","search","setSearch","loadOptions","inputValue","fetch","inpiu","options","then","response","json","console","log","catch","err","error","handleOnChange","searchData","placeholder","debounceTimeout","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/meharbanmultani/react-weather-app/src/components/search/search.js"],"sourcesContent":["import { useState } from \"react\"\nimport { AsyncPaginate } from \"react-select-async-paginate\"\nimport {GEO_API_URL, geoApiOptions} from '../../api'\n\nconst Search = ({onSearchChange}) => {\n\n    const[search, setSearch]  = useState(null);\n\n\n    const loadOptions = (inputValue) =>{\n       return fetch(`${GEO_API_URL}/cities?minpopulation=1000000&namePrefix=${inpiu}`, options)\n        .then(response=> response.json())\n        .then(response=> console.log(response))\n        .catch(err => console.error(err))\n    }\n\n    const handleOnChange = (searchData) => {\n        setSearch(searchData);\n        onSearchChange(searchData);\n    }\n\n    return (\n        <AsyncPaginate\n            placeholder  = \"Search for city\"\n            debounceTimeout={600}//To not make a request everytime a button is clicked\n            value= {search}\n            onChange= {handleOnChange}\n            loadOptions= {loadOptions}\n            />\n    )\n}\n\nexport default Search"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAAQC,WAAW,EAAEC,aAAa,QAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAEjC,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAIV,QAAQ,CAAC,IAAI,CAAC;EAG1C,MAAMW,WAAW,GAAIC,UAAU,IAAI;IAChC,OAAOC,KAAK,CAAE,GAAEX,WAAY,4CAA2CY,KAAM,EAAC,EAAEC,OAAO,CAAC,CACtFC,IAAI,CAACC,QAAQ,IAAGA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAChCF,IAAI,CAACC,QAAQ,IAAGE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAAC,CACtCI,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAME,cAAc,GAAIC,UAAU,IAAK;IACnCf,SAAS,CAACe,UAAU,CAAC;IACrBlB,cAAc,CAACkB,UAAU,CAAC;EAC9B,CAAC;EAED,oBACIpB,OAAA,CAACJ,aAAa;IACVyB,WAAW,EAAI,iBAAiB;IAChCC,eAAe,EAAE,GAAI;IAAA;IACrBC,KAAK,EAAGnB,MAAO;IACfoB,QAAQ,EAAGL,cAAe;IAC1Bb,WAAW,EAAGA;EAAY;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEd,CAAC;AAAAzB,EAAA,CA1BKF,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AA4BZ,eAAeA,MAAM;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}